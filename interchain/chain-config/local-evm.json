[
  {
    "name": "Moonbeam",
    "chainId": 2500,
    "gateway": "0x9E404e6ff4F2a15C99365Bd6615fCE3FB9E9Cb76",
    "gasService": "0x783ce2eF32Aa74B41c8EbbbeC6F632b6Da00C1e9",
    "constAddressDeployer": "0x69aeB7Dc4f2A86873Dae8D753DE89326Cf90a77a",
    "create3Deployer": "0x783E7717fD4592814614aFC47ee92568a495Ce0B",
    "interchainTokenService": "0x2F33C226a43d05849794DE9A9098122c6119B7be",
    "interchainTokenFactory": "0x8d58c89E3D8E7cf2B2d153abC33AeE65bEcc442c",
    "tokens": {
      "aUSDC": "aUSDC"
    },
    "rpc": "http://127.0.0.1:8500/0",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasService_, string chainName_)",
        "error InvalidAddress()",
        "error NotApprovedByGateway()",
        "event MessageReceived(address indexed sender, address indexed recipient, string sourceChain, string content)",
        "event MessageSent(address indexed sender, address indexed recipient, string destinationChain, string content)",
        "function currentChain() view returns (string)",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getAllMessages() view returns (tuple(address sender, address recipient, string content, uint256 timestamp, bool isRead, string sourceChain, string destinationChain)[])",
        "function getChainName() view returns (string)",
        "function getMessageCount(address user) view returns (uint256)",
        "function readMessage(uint256 index) returns (address sender, string content, uint256 timestamp, string sourceChain, string destinationChain)",
        "function sendMessage(string destinationChain, string destinationAddress, address recipient, string content) payable"
      ],
      "address": "0xBA8A5c7EbE020085e40D382A2Dcb68a4324BF503"
    }
  },
  {
    "name": "Avalanche",
    "chainId": 2501,
    "gateway": "0x54C156f087EBA12a869E0CBb49548c3F55E80edC",
    "gasService": "0xD3cB555CB530C3374B122242b15d2943445c31d6",
    "constAddressDeployer": "0x69aeB7Dc4f2A86873Dae8D753DE89326Cf90a77a",
    "create3Deployer": "0x783E7717fD4592814614aFC47ee92568a495Ce0B",
    "interchainTokenService": "0xD8E19d0fb8eDFB301a6bb7e6F31491319a670383",
    "interchainTokenFactory": "0xc5663F4C39047c4e54895457567BdD1a045c4b72",
    "tokens": {
      "aUSDC": "aUSDC"
    },
    "rpc": "http://127.0.0.1:8500/1",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasService_, string chainName_)",
        "error InvalidAddress()",
        "error NotApprovedByGateway()",
        "event MessageReceived(address indexed sender, address indexed recipient, string sourceChain, string content)",
        "event MessageSent(address indexed sender, address indexed recipient, string destinationChain, string content)",
        "function currentChain() view returns (string)",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getAllMessages() view returns (tuple(address sender, address recipient, string content, uint256 timestamp, bool isRead, string sourceChain, string destinationChain)[])",
        "function getChainName() view returns (string)",
        "function getMessageCount(address user) view returns (uint256)",
        "function readMessage(uint256 index) returns (address sender, string content, uint256 timestamp, string sourceChain, string destinationChain)",
        "function sendMessage(string destinationChain, string destinationAddress, address recipient, string content) payable"
      ],
      "address": "0xBA8A5c7EbE020085e40D382A2Dcb68a4324BF503"
    }
  },
  {
    "name": "Fantom",
    "chainId": 2502,
    "gateway": "0xcb189eB52ca573eFD633d07A3B5357e4d989D743",
    "gasService": "0x85Fa9202C6Be69e9889CC0247Af72ABc70DbF542",
    "constAddressDeployer": "0x69aeB7Dc4f2A86873Dae8D753DE89326Cf90a77a",
    "create3Deployer": "0x783E7717fD4592814614aFC47ee92568a495Ce0B",
    "interchainTokenService": "0xc13323a75343432Bc9C5db570532eCB9EB07f812",
    "interchainTokenFactory": "0xaDDb11A2DDD344c2614BEAeE290476b8D716Ce9f",
    "tokens": {
      "aUSDC": "aUSDC"
    },
    "rpc": "http://127.0.0.1:8500/2",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasService_, string chainName_)",
        "error InvalidAddress()",
        "error NotApprovedByGateway()",
        "event MessageReceived(address indexed sender, address indexed recipient, string sourceChain, string content)",
        "event MessageSent(address indexed sender, address indexed recipient, string destinationChain, string content)",
        "function currentChain() view returns (string)",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getAllMessages() view returns (tuple(address sender, address recipient, string content, uint256 timestamp, bool isRead, string sourceChain, string destinationChain)[])",
        "function getChainName() view returns (string)",
        "function getMessageCount(address user) view returns (uint256)",
        "function readMessage(uint256 index) returns (address sender, string content, uint256 timestamp, string sourceChain, string destinationChain)",
        "function sendMessage(string destinationChain, string destinationAddress, address recipient, string content) payable"
      ],
      "address": "0xBA8A5c7EbE020085e40D382A2Dcb68a4324BF503"
    }
  },
  {
    "name": "Ethereum",
    "chainId": 2503,
    "gateway": "0x013459EC3E8Aeced878C5C4bFfe126A366cd19E9",
    "gasService": "0x28f8B50E1Be6152da35e923602a2641491E71Ed8",
    "constAddressDeployer": "0x69aeB7Dc4f2A86873Dae8D753DE89326Cf90a77a",
    "create3Deployer": "0x783E7717fD4592814614aFC47ee92568a495Ce0B",
    "interchainTokenService": "0xc66bec212fb265f86703ff82599693Eb020e9f34",
    "interchainTokenFactory": "0x5548588aCE4A15342856BC36576ceA6C97198086",
    "tokens": {
      "aUSDC": "aUSDC"
    },
    "rpc": "http://127.0.0.1:8500/3",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasService_, string chainName_)",
        "error InvalidAddress()",
        "error NotApprovedByGateway()",
        "event MessageReceived(address indexed sender, address indexed recipient, string sourceChain, string content)",
        "event MessageSent(address indexed sender, address indexed recipient, string destinationChain, string content)",
        "function currentChain() view returns (string)",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getAllMessages() view returns (tuple(address sender, address recipient, string content, uint256 timestamp, bool isRead, string sourceChain, string destinationChain)[])",
        "function getChainName() view returns (string)",
        "function getMessageCount(address user) view returns (uint256)",
        "function readMessage(uint256 index) returns (address sender, string content, uint256 timestamp, string sourceChain, string destinationChain)",
        "function sendMessage(string destinationChain, string destinationAddress, address recipient, string content) payable"
      ],
      "address": "0xBA8A5c7EbE020085e40D382A2Dcb68a4324BF503"
    }
  },
  {
    "name": "Polygon",
    "chainId": 2504,
    "gateway": "0xc7B788E88BAaB770A6d4936cdcCcd5250E1bbAd8",
    "gasService": "0xC573c722e21eD7fadD38A8f189818433e01Ae466",
    "constAddressDeployer": "0x69aeB7Dc4f2A86873Dae8D753DE89326Cf90a77a",
    "create3Deployer": "0x783E7717fD4592814614aFC47ee92568a495Ce0B",
    "interchainTokenService": "0x8Ad859f6BFe049443E0087e8a52E25Bcfaeb70B3",
    "interchainTokenFactory": "0x19cc5317b73f1D2D1de133a99942b08d7203da6E",
    "tokens": {
      "aUSDC": "aUSDC"
    },
    "rpc": "http://127.0.0.1:8500/4",
    "contract": {
      "abi": [
        "constructor(address gateway_, address gasService_, string chainName_)",
        "error InvalidAddress()",
        "error NotApprovedByGateway()",
        "event MessageReceived(address indexed sender, address indexed recipient, string sourceChain, string content)",
        "event MessageSent(address indexed sender, address indexed recipient, string destinationChain, string content)",
        "function currentChain() view returns (string)",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getAllMessages() view returns (tuple(address sender, address recipient, string content, uint256 timestamp, bool isRead, string sourceChain, string destinationChain)[])",
        "function getChainName() view returns (string)",
        "function getMessageCount(address user) view returns (uint256)",
        "function readMessage(uint256 index) returns (address sender, string content, uint256 timestamp, string sourceChain, string destinationChain)",
        "function sendMessage(string destinationChain, string destinationAddress, address recipient, string content) payable"
      ],
      "address": "0xBA8A5c7EbE020085e40D382A2Dcb68a4324BF503"
    }
  }
]
